//
//  ContentView.swift
//  lab3_22
//
//  Created by student on 14/03/2023.
//  Copyright © 2023 PL. All rights reserved.
//

import SwiftUI

struct ContentView: View {
    private let tiresManager: TiresManager = TiresManager()
    @State private var chosenSize: Int = 15
    @State private var chosenManufacturer: String = "pierwszy"
    @State private var chosenQuantity: Int = 1
    @State private var availability: String = ""
    
    var body: some View {
        VStack {
            Text("Rozmiar opony")
            Picker(selection: $chosenSize, label: Text("Rozmiar")) {
                ForEach(tiresManager.getAllSizes(), id: \.self) { size in
                    Text(String(size))
                }
            }.pickerStyle(SegmentedPickerStyle())
            
            Picker(selection: $chosenManufacturer, label: Text("Producent")) {
                ForEach(tiresManager.getAllManufacturers(), id: \.self) { manufacturer in
                    Text(manufacturer)
                }
            }

            
            Text("Wybierz liczbe opon").padding(.top)
            TextField("1", text: Binding(
                get: { String(self.chosenQuantity) },
                set: {
                    self.chosenQuantity = Int($0) ?? self.chosenQuantity
                    if self.chosenQuantity < 1 {
                        self.chosenQuantity = 1
                    }
                }
            ))
            .keyboardType(.numberPad)
            .padding()
            .frame(width: 75.0)
            .border(Color.black)
            .multilineTextAlignment(.center)

            Button(action: {
                let available = self.tiresManager.checkAvailability(manufacturer: self.chosenManufacturer, size: self.chosenSize, quantity: self.chosenQuantity)
                if available {
                    self.availability = "Dostępne"
                }
                else {
                    self.availability = "Niedostępne"
                }
            }) {
                Text("Sprawdź dostępność")
                    .padding()
                    .background(Color.green)
                    .foregroundColor(.white)
                    .cornerRadius(30)
            }
            .padding(.vertical)
            
            Text(availability)
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

//
//  Opony.swift
//  lab3_22
//
//  Created by student on 14/03/2023.
//  Copyright © 2023 PL. All rights reserved.
//

import Foundation

struct Tire {
    var manufacturer: String
    var sizeAvailability: [Int:Int]
    
    init(manufacturer: String, sizeAvailability: [Int:Int]) {
        self.manufacturer = manufacturer
        self.sizeAvailability = sizeAvailability
    }
}

/
//  MenagerOpon.swift
//  lab3_22
//
//  Created by student on 14/03/2023.
//  Copyright © 2023 PL. All rights reserved.
//

import Foundation

struct TiresManager {
    var tires: [Tire]
    
    init() {
        self.tires = [
            Tire(manufacturer: "pierwszy", sizeAvailability: [16:5, 17:3, 18:10]),
            Tire(manufacturer: "drugi", sizeAvailability: [16:12, 17:5, 18:8]),
            Tire(manufacturer: "trzeci", sizeAvailability: [15:30, 16:15, 17:2]),
        ]
    }
    
    func checkAvailability(manufacturer: String, size: Int, quantity: Int) -> Bool {
        guard let m = (tires.first{ tire in tire.manufacturer == manufacturer}) else {
            return false
        }
        guard let a = m.sizeAvailability[size] else {
            return false
        }
        guard a >= quantity else {
            return false
        }
        
        return true
    }
    
    func getAllSizes() -> [Int] {
        var sizes: Set<Int> = Set()
        for tire in tires {
            for size in tire.sizeAvailability.keys {
                sizes.insert(size)
            }
        }
        
        return Array(sizes).sorted()
    }
    
    func getAllManufacturers() -> [String] {
        var manufacturers: Set<String> = Set()
        for tire in tires {
            manufacturers.insert(tire.manufacturer)
        }
        
        return Array(manufacturers).sorted()
    }
}
